plugins {
    id "minirogue.multiplatform.library"
}

minirogue {
    android()
    ios()
    kotlinCompose()
    metro()
}

kotlin.sourceSets.commonMain.dependencies {
    implementation(libs.compose.lifecycle)
    implementation(libs.compose.navigation)
    implementation(projects.core)
    implementation(projects.feature.homeScreen.internal)
    implementation(projects.feature.mainScreen.internal)
    implementation(projects.feature.mediaItem.internal)
    implementation(projects.feature.mediaList.internal)
    implementation(projects.feature.series.internal)
    implementation(projects.feature.settings.internal)
    implementation(projects.feature.selectFilters.internal)
    implementation(projects.library.composeExt.public)
    implementation(projects.library.coroutineExt.internal)
    implementation(projects.library.coroutineExt.public)
    implementation(projects.library.filters.internal)
    implementation(projects.library.globalNotification.internal)
    implementation(projects.library.holoclient.internal)
    implementation(projects.library.logger.internal)
    implementation(projects.library.mediaItem.internal)
    implementation(projects.library.mediaNotes.internal)
    implementation(projects.library.navigation.public)
    implementation(projects.library.networking.internal)
    implementation(projects.library.serializationExt.internal)
    implementation(projects.library.series.internal)
    implementation(projects.library.settings.internal)
    implementation(projects.library.sorting.internal)
}

kotlin.sourceSets.iosMain.dependencies {
    // TODO should be able to eliminate once ios bindings can be moved back into their modules
    implementation(libs.androidx.datastore)
}

//tasks.matching { it.name == "syncComposeResourcesForIos" }
//        .configureEach { enabled = false } // TODO https://youtrack.jetbrains.com/issue/CMP-4885
